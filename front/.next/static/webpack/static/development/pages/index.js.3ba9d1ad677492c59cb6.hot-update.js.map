{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.3ba9d1ad677492c59cb6.hot-update.js","sources":["webpack:///./reducers/post.js"],"sourcesContent":["// post reducer ((((((((((( store은 정확하게는 state, action, reducer가 합쳐진 것 )))))))))))\r\n\r\n// store\r\nexport const initialState = {\r\n    imagePaths: [], // 미리보기 이미지 경로들\r\n    mainPosts: [\r\n        {\r\n            id: 1,\r\n            User: {\r\n                id: 1,\r\n                nickname: \"pkm\",\r\n            },\r\n            content: \"까불지마\",\r\n            img: \"\",\r\n            Comments: [],\r\n        },\r\n    ], // 화면에 보일 포스트들\r\n    imagePaths: [], // 미리보기 이미지 경로\r\n    addPostError: false, // 포스트 업로드 실패 사유\r\n    isAddingPost: false, // 포스트 업로드 중\r\n    postAdded: false, // 포스트가 업로드 성공여부\r\n    isAddingComment: false, // 댓글 업로드중\r\n    addCommentErrorReason: \"\", // 댓글 업로드 실패사유\r\n    commentAdded: false, // 댓글 업로드 성공여부\r\n};\r\n\r\nconst dummyPost = {\r\n    id: 2,\r\n    User: {\r\n        id: 1,\r\n        nickname: \"깽\",\r\n    },\r\n    content: \"나는 더미입니다.\",\r\n    Comments: [],\r\n};\r\n\r\nconst dummyComments = {\r\n    id: 2,\r\n    User: {\r\n        id: 1,\r\n        nickname: 2,\r\n    },\r\n    createdAt: new Date(),\r\n    content: \"더미 댓글입니다.\",\r\n};\r\n\r\n// 액션 이름 (비동기 처리를 해야하는 경우 REQUEST, SUCCESS, FAILURE 3가지로 나눴음)\r\n// 메인포스트 로딩하는 액션\r\nexport const LOAD_MAIN_POSTS_REQUEST = \"LOAD_MAIN_POSTS_REQUEST\";\r\nexport const LOAD_MAIN_POSTS_SUCCESS = \"LOAD_MAIN_POSTS_SUCCESS\";\r\nexport const LOAD_MAIN_POSTS_FAILURE = \"LOAD_MAIN_POSTS_FAILURE\";\r\n\r\n// 해시태그로 검색했을 때 그 결과를 로딩하는 액션\r\nexport const LOAD_HASHTAG_POSTS_REQUEST = \"LOAD_HASHTAG_POSTS_REQUEST\";\r\nexport const LOAD_HASHTAG_POSTS_SUCCESS = \"LOAD_HASHTAG_POSTS_SUCCESS\";\r\nexport const LOAD_HASHTAG_POSTS_FAILURE = \"LOAD_HASHTAG_POSTS_FAILURE\";\r\n\r\n// 이미지 업로드하는 액션\r\nexport const UPLOAD_IMGES_REQUEST = \"UPLOAD_IMGES_REQUEST\";\r\nexport const UPLOAD_IMGES_SUCCESS = \"UPLOAD_IMGES_SUCCESS\";\r\nexport const UPLOAD_IMGES_FAILURE = \"UPLOAD_IMGES_FAILURE\";\r\n\r\n// 이미지 업로드한거 취소하는 액션\r\nexport const REMOVE_IMAGE = \"REMOVE_IMAGE\";\r\n\r\n// 포스트에 좋아요 눌렀을때 액션\r\nexport const LIKE_POST_REQUEST = \"LIKE_POST_REQUEST\";\r\nexport const LIKE_POST_SUCCESS = \"LIKE_POST_SUCCESS\";\r\nexport const LIKE_POST_FAILURE = \"LIKE_POST_FAILURE\";\r\n\r\n// 좋아요 취소했을때 액션\r\nexport const UNLIKE_POST_REQUEST = \"UNLIKE_POST_REQUEST\";\r\nexport const UNLIKE_POST_SUCCESS = \"UNLIKE_POST_SUCCESS\";\r\nexport const UNLIKE_POST_FAILURE = \"UNLIKE_POST_FAILURE\";\r\n\r\n// 포스트 추가하는 액션\r\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\r\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\r\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\r\n\r\n// 게시글에 댓글 남겼을때\r\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\r\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\r\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\r\n\r\n// 게시글에 댓글 불러오는거\r\nexport const LOAD_COMMENT_REQUEST = \"LOAD_COMMENT_REQUEST\";\r\nexport const LOAD_COMMENT_SUCCESS = \"LOAD_COMMENT_SUCCESS\";\r\nexport const LOAD_COMMENT_FAILURE = \"LOAD_COMMENT_FAILURE\";\r\n\r\n// 리트윗하는 액션\r\nexport const RETWEET_REQUEST = \"RETWEET_REQUEST\";\r\nexport const RETWEET_SUCCESS = \"RETWEET_SUCCESS\";\r\nexport const RETWEET_FAILURE = \"RETWEET_FAILURE\";\r\n\r\n// 포스트 제거하는 액션\r\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\r\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\r\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\r\n\r\n// 포스트 수정하는 액션 !!!!!!!!!!!!!!!!!!!!! 내가 직접 해볼 것 !!!!!!!!!!!!!!!!!!!!!!!\r\n\r\n// 실제 액션\r\nconst addPost = {\r\n    type: ADD_POST_REQUEST,\r\n};\r\n\r\n// reducer\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        // 메인포스트 불러오는거\r\n        case LOAD_MAIN_POSTS_REQUEST: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case LOAD_MAIN_POSTS_SUCCESS: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case LOAD_MAIN_POSTS_FAILURE: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        // 해시태그로 검색했을 때\r\n        case LOAD_HASHTAG_POSTS_REQUEST: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case LOAD_HASHTAG_POSTS_SUCCESS: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case LOAD_HASHTAG_POSTS_FAILURE: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        // 이미지 업로드\r\n        case UPLOAD_IMGES_REQUEST: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case UPLOAD_IMGES_SUCCESS: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case UPLOAD_IMGES_FAILURE: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        // 이미지 업로드 취소\r\n        case REMOVE_IMAGE: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        // 포스트에 좋아요\r\n        case LIKE_POST_REQUEST: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case LIKE_POST_SUCCESS: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case LIKE_POST_FAILURE: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        // 포스트에 좋아요 취소\r\n        case UNLIKE_POST_REQUEST: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case UNLIKE_POST_SUCCESS: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case UNLIKE_POST_FAILURE: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        // 포스트 추가\r\n        case ADD_POST_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isAddingPost: true,\r\n                addPostError: \"\",\r\n                postAdded: false,\r\n            };\r\n        }\r\n        case ADD_POST_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isAddingPost: false,\r\n                mainPosts: [dummyPost, ...state.mainPosts], // [action.data, ...state.mainPosts],\r\n                postAdded: true,\r\n            };\r\n        }\r\n        case ADD_POST_FAILURE: {\r\n            return {\r\n                ...state,\r\n                isAddingPost: false,\r\n                addPostError: action.error,\r\n            };\r\n        }\r\n        // 게시글에 댓글 남겼을 때\r\n        case ADD_COMMENT_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isAddingComment: true,\r\n                addCommentErrorReason: \"\",\r\n                commentAdded: false,\r\n            };\r\n        }\r\n        case ADD_COMMENT_SUCCESS: {\r\n            // 댓글을 추가할 게시글을 찾아야함\r\n            const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\r\n            const post = state.mainPosts[postIndex]; // 불변성 확보\r\n            //const Comments = [...post.Comments, action.data.comment]; // 댓글 넣음\r\n            const Comments = [...post.Comments, dummyComments]; // 댓글 넣음\r\n            const mainPosts = [...state.mainPosts]; // mainPosts 불변성 확보\r\n            mainPosts[postIndex] = { ...post, Comments };\r\n            return {\r\n                ...state,\r\n                commentAdded: true,\r\n                mainPosts: [dummyPost, ...mainPosts],\r\n                isAddingComment: false,\r\n            };\r\n        }\r\n        case ADD_COMMENT_FAILURE: {\r\n            return {\r\n                ...state,\r\n                addCommentErrorReason: action.error,\r\n                isAddingComment: false,\r\n            };\r\n        }\r\n        // 게시글에 댓글 불러옴\r\n        case LOAD_COMMENT_REQUEST: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case LOAD_COMMENT_SUCCESS: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case LOAD_COMMENT_FAILURE: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        // 리트윗\r\n        case RETWEET_REQUEST: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case RETWEET_SUCCESS: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case RETWEET_FAILURE: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        // 포스트 제거\r\n        case REMOVE_POST_REQUEST: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case REMOVE_POST_SUCCESS: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case REMOVE_POST_FAILURE: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        default: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AARA;AAHA;AAulMA;AAoMA;AACA;AACA;;;;A","sourceRoot":""}