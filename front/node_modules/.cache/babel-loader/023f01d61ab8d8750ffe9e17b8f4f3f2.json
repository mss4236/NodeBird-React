{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nvar _initialState;\n\n// post reducer ((((((((((( store은 정확하게는 state, action, reducer가 합쳐진 것 )))))))))))\n// store\nexport var initialState = (_initialState = {\n  imagePaths: [],\n  // 미리보기 이미지 경로들\n  mainPosts: [{\n    User: {\n      id: 1,\n      nickname: \"pkm\"\n    },\n    content: \"까불지마\",\n    img: \"\",\n    Comments: []\n  }]\n}, _defineProperty(_initialState, \"imagePaths\", []), _defineProperty(_initialState, \"addPostError\", false), _defineProperty(_initialState, \"isAddingPost\", false), _defineProperty(_initialState, \"postAdded\", false), _defineProperty(_initialState, \"isAddingComment\", false), _defineProperty(_initialState, \"addCommentErrorReason\", \"\"), _defineProperty(_initialState, \"commentAdded\", false), _initialState);\nvar dummyPost = {\n  id: 2,\n  User: {\n    id: \"cokohp\",\n    nickname: \"깽\"\n  },\n  content: \"나는 더미입니다.\",\n  Comments: []\n};\nvar dummyComments = {\n  id: 1,\n  User: {\n    id: 1,\n    nickname: 2\n  },\n  createdAt: new Date(),\n  content: \"더미 댓글입니다.\"\n}; // 액션 이름 (비동기 처리를 해야하는 경우 REQUEST, SUCCESS, FAILURE 3가지로 나눴음)\n// 메인포스트 로딩하는 액션\n\nexport var LOAD_MAIN_POSTS_REQUEST = \"LOAD_MAIN_POSTS_REQUEST\";\nexport var LOAD_MAIN_POSTS_SUCCESS = \"LOAD_MAIN_POSTS_SUCCESS\";\nexport var LOAD_MAIN_POSTS_FAILURE = \"LOAD_MAIN_POSTS_FAILURE\"; // 해시태그로 검색했을 때 그 결과를 로딩하는 액션\n\nexport var LOAD_HASHTAG_POSTS_REQUEST = \"LOAD_HASHTAG_POSTS_REQUEST\";\nexport var LOAD_HASHTAG_POSTS_SUCCESS = \"LOAD_HASHTAG_POSTS_SUCCESS\";\nexport var LOAD_HASHTAG_POSTS_FAILURE = \"LOAD_HASHTAG_POSTS_FAILURE\"; // 이미지 업로드하는 액션\n\nexport var UPLOAD_IMGES_REQUEST = \"UPLOAD_IMGES_REQUEST\";\nexport var UPLOAD_IMGES_SUCCESS = \"UPLOAD_IMGES_SUCCESS\";\nexport var UPLOAD_IMGES_FAILURE = \"UPLOAD_IMGES_FAILURE\"; // 이미지 업로드한거 취소하는 액션\n\nexport var REMOVE_IMAGE = \"REMOVE_IMAGE\"; // 포스트에 좋아요 눌렀을때 액션\n\nexport var LIKE_POST_REQUEST = \"LIKE_POST_REQUEST\";\nexport var LIKE_POST_SUCCESS = \"LIKE_POST_SUCCESS\";\nexport var LIKE_POST_FAILURE = \"LIKE_POST_FAILURE\"; // 좋아요 취소했을때 액션\n\nexport var UNLIKE_POST_REQUEST = \"UNLIKE_POST_REQUEST\";\nexport var UNLIKE_POST_SUCCESS = \"UNLIKE_POST_SUCCESS\";\nexport var UNLIKE_POST_FAILURE = \"UNLIKE_POST_FAILURE\"; // 포스트 추가하는 액션\n\nexport var ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport var ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport var ADD_POST_FAILURE = \"ADD_POST_FAILURE\"; // 게시글에 댓글 남겼을때\n\nexport var ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport var ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport var ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\"; // 게시글에 댓글 불러오는거\n\nexport var LOAD_COMMENT_REQUEST = \"LOAD_COMMENT_REQUEST\";\nexport var LOAD_COMMENT_SUCCESS = \"LOAD_COMMENT_SUCCESS\";\nexport var LOAD_COMMENT_FAILURE = \"LOAD_COMMENT_FAILURE\"; // 리트윗하는 액션\n\nexport var RETWEET_REQUEST = \"RETWEET_REQUEST\";\nexport var RETWEET_SUCCESS = \"RETWEET_SUCCESS\";\nexport var RETWEET_FAILURE = \"RETWEET_FAILURE\"; // 포스트 제거하는 액션\n\nexport var REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport var REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport var REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\"; // 포스트 수정하는 액션 !!!!!!!!!!!!!!!!!!!!! 내가 직접 해볼 것 !!!!!!!!!!!!!!!!!!!!!!!\n// 실제 액션\n\nvar addPost = {\n  type: ADD_POST_REQUEST\n}; // reducer\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    // 메인포스트 불러오는거\n    case LOAD_MAIN_POSTS_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_MAIN_POSTS_SUCCESS:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_MAIN_POSTS_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n    // 해시태그로 검색했을 때\n\n    case LOAD_HASHTAG_POSTS_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_HASHTAG_POSTS_SUCCESS:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_HASHTAG_POSTS_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n    // 이미지 업로드\n\n    case UPLOAD_IMGES_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case UPLOAD_IMGES_SUCCESS:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case UPLOAD_IMGES_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n    // 이미지 업로드 취소\n\n    case REMOVE_IMAGE:\n      {\n        return _objectSpread({}, state);\n      }\n    // 포스트에 좋아요\n\n    case LIKE_POST_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LIKE_POST_SUCCESS:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LIKE_POST_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n    // 포스트에 좋아요 취소\n\n    case UNLIKE_POST_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case UNLIKE_POST_SUCCESS:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case UNLIKE_POST_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n    // 포스트 추가\n\n    case ADD_POST_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: true,\n          addPostError: \"\",\n          postAdded: false\n        });\n      }\n\n    case ADD_POST_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          mainPosts: [dummyPost].concat(_toConsumableArray(state.mainPosts)),\n          // [action.data, ...state.mainPosts],\n          postAdded: true\n        });\n      }\n\n    case ADD_POST_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          addPostError: action.error\n        });\n      }\n    // 게시글에 댓글 남겼을 때\n\n    case ADD_COMMENT_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isAddingComment: true,\n          addCommentErrorReason: \"\",\n          commentAdded: false\n        });\n      }\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        // 댓글을 추가할 게시글을 찾아야함\n        var postIndex = state.mainPosts.findIndex(function (v) {\n          return v.id === action.data.postId;\n        });\n        var post = state.mainPosts[postIndex]; // 불변성 확보\n\n        var Comments = [].concat(_toConsumableArray(post.Comments), [action.data.comment]); // 댓글 넣음\n\n        var mainPosts = _toConsumableArray(state.mainPosts); // mainPosts 불변성 확보\n\n\n        mainPosts[postIndex] = _objectSpread({}, post, {\n          Comments: Comments\n        });\n        return _objectSpread({}, state, {\n          commentAdded: true,\n          mainPosts: [dummyPost].concat(_toConsumableArray(mainPosts))\n        });\n      }\n\n    case ADD_COMMENT_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          addCommentErrorReason: action.error\n        });\n      }\n    // 게시글에 댓글 불러옴\n\n    case LOAD_COMMENT_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_COMMENT_SUCCESS:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_COMMENT_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n    // 리트윗\n\n    case RETWEET_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case RETWEET_SUCCESS:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case RETWEET_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n    // 포스트 제거\n\n    case REMOVE_POST_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case REMOVE_POST_SUCCESS:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case REMOVE_POST_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/mss42/Desktop/SNS React/front/reducers/post.js"],"names":["initialState","imagePaths","mainPosts","User","id","nickname","content","img","Comments","dummyPost","dummyComments","createdAt","Date","LOAD_MAIN_POSTS_REQUEST","LOAD_MAIN_POSTS_SUCCESS","LOAD_MAIN_POSTS_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","UPLOAD_IMGES_REQUEST","UPLOAD_IMGES_SUCCESS","UPLOAD_IMGES_FAILURE","REMOVE_IMAGE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","LOAD_COMMENT_REQUEST","LOAD_COMMENT_SUCCESS","LOAD_COMMENT_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","addPost","type","reducer","state","action","isAddingPost","addPostError","postAdded","error","isAddingComment","addCommentErrorReason","commentAdded","postIndex","findIndex","v","data","postId","post","comment"],"mappings":"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","sourcesContent":["// post reducer ((((((((((( store은 정확하게는 state, action, reducer가 합쳐진 것 )))))))))))\r\n\r\n// store\r\nexport const initialState = {\r\n    imagePaths: [], // 미리보기 이미지 경로들\r\n    mainPosts: [\r\n        {\r\n            User: {\r\n                id: 1,\r\n                nickname: \"pkm\",\r\n            },\r\n            content: \"까불지마\",\r\n            img: \"\",\r\n            Comments: [],\r\n        },\r\n    ], // 화면에 보일 포스트들\r\n    imagePaths: [], // 미리보기 이미지 경로\r\n    addPostError: false, // 포스트 업로드 실패 사유\r\n    isAddingPost: false, // 포스트 업로드 중\r\n    postAdded: false, // 포스트가 업로드 성공여부\r\n    isAddingComment: false, // 댓글 업로드중\r\n    addCommentErrorReason: \"\", // 댓글 업로드 실패사유\r\n    commentAdded: false, // 댓글 업로드 성공여부\r\n};\r\n\r\nconst dummyPost = {\r\n    id: 2,\r\n    User: {\r\n        id: \"cokohp\",\r\n        nickname: \"깽\",\r\n    },\r\n    content: \"나는 더미입니다.\",\r\n    Comments: [],\r\n};\r\n\r\nconst dummyComments = {\r\n    id: 1,\r\n    User: {\r\n        id: 1,\r\n        nickname: 2,\r\n    },\r\n    createdAt: new Date(),\r\n    content: \"더미 댓글입니다.\",\r\n};\r\n\r\n// 액션 이름 (비동기 처리를 해야하는 경우 REQUEST, SUCCESS, FAILURE 3가지로 나눴음)\r\n// 메인포스트 로딩하는 액션\r\nexport const LOAD_MAIN_POSTS_REQUEST = \"LOAD_MAIN_POSTS_REQUEST\";\r\nexport const LOAD_MAIN_POSTS_SUCCESS = \"LOAD_MAIN_POSTS_SUCCESS\";\r\nexport const LOAD_MAIN_POSTS_FAILURE = \"LOAD_MAIN_POSTS_FAILURE\";\r\n\r\n// 해시태그로 검색했을 때 그 결과를 로딩하는 액션\r\nexport const LOAD_HASHTAG_POSTS_REQUEST = \"LOAD_HASHTAG_POSTS_REQUEST\";\r\nexport const LOAD_HASHTAG_POSTS_SUCCESS = \"LOAD_HASHTAG_POSTS_SUCCESS\";\r\nexport const LOAD_HASHTAG_POSTS_FAILURE = \"LOAD_HASHTAG_POSTS_FAILURE\";\r\n\r\n// 이미지 업로드하는 액션\r\nexport const UPLOAD_IMGES_REQUEST = \"UPLOAD_IMGES_REQUEST\";\r\nexport const UPLOAD_IMGES_SUCCESS = \"UPLOAD_IMGES_SUCCESS\";\r\nexport const UPLOAD_IMGES_FAILURE = \"UPLOAD_IMGES_FAILURE\";\r\n\r\n// 이미지 업로드한거 취소하는 액션\r\nexport const REMOVE_IMAGE = \"REMOVE_IMAGE\";\r\n\r\n// 포스트에 좋아요 눌렀을때 액션\r\nexport const LIKE_POST_REQUEST = \"LIKE_POST_REQUEST\";\r\nexport const LIKE_POST_SUCCESS = \"LIKE_POST_SUCCESS\";\r\nexport const LIKE_POST_FAILURE = \"LIKE_POST_FAILURE\";\r\n\r\n// 좋아요 취소했을때 액션\r\nexport const UNLIKE_POST_REQUEST = \"UNLIKE_POST_REQUEST\";\r\nexport const UNLIKE_POST_SUCCESS = \"UNLIKE_POST_SUCCESS\";\r\nexport const UNLIKE_POST_FAILURE = \"UNLIKE_POST_FAILURE\";\r\n\r\n// 포스트 추가하는 액션\r\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\r\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\r\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\r\n\r\n// 게시글에 댓글 남겼을때\r\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\r\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\r\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\r\n\r\n// 게시글에 댓글 불러오는거\r\nexport const LOAD_COMMENT_REQUEST = \"LOAD_COMMENT_REQUEST\";\r\nexport const LOAD_COMMENT_SUCCESS = \"LOAD_COMMENT_SUCCESS\";\r\nexport const LOAD_COMMENT_FAILURE = \"LOAD_COMMENT_FAILURE\";\r\n\r\n// 리트윗하는 액션\r\nexport const RETWEET_REQUEST = \"RETWEET_REQUEST\";\r\nexport const RETWEET_SUCCESS = \"RETWEET_SUCCESS\";\r\nexport const RETWEET_FAILURE = \"RETWEET_FAILURE\";\r\n\r\n// 포스트 제거하는 액션\r\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\r\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\r\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\r\n\r\n// 포스트 수정하는 액션 !!!!!!!!!!!!!!!!!!!!! 내가 직접 해볼 것 !!!!!!!!!!!!!!!!!!!!!!!\r\n\r\n// 실제 액션\r\nconst addPost = {\r\n    type: ADD_POST_REQUEST,\r\n};\r\n\r\n// reducer\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        // 메인포스트 불러오는거\r\n        case LOAD_MAIN_POSTS_REQUEST: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case LOAD_MAIN_POSTS_SUCCESS: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case LOAD_MAIN_POSTS_FAILURE: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        // 해시태그로 검색했을 때\r\n        case LOAD_HASHTAG_POSTS_REQUEST: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case LOAD_HASHTAG_POSTS_SUCCESS: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case LOAD_HASHTAG_POSTS_FAILURE: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        // 이미지 업로드\r\n        case UPLOAD_IMGES_REQUEST: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case UPLOAD_IMGES_SUCCESS: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case UPLOAD_IMGES_FAILURE: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        // 이미지 업로드 취소\r\n        case REMOVE_IMAGE: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        // 포스트에 좋아요\r\n        case LIKE_POST_REQUEST: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case LIKE_POST_SUCCESS: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case LIKE_POST_FAILURE: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        // 포스트에 좋아요 취소\r\n        case UNLIKE_POST_REQUEST: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case UNLIKE_POST_SUCCESS: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case UNLIKE_POST_FAILURE: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        // 포스트 추가\r\n        case ADD_POST_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isAddingPost: true,\r\n                addPostError: \"\",\r\n                postAdded: false,\r\n            };\r\n        }\r\n        case ADD_POST_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isAddingPost: false,\r\n                mainPosts: [dummyPost, ...state.mainPosts], // [action.data, ...state.mainPosts],\r\n                postAdded: true,\r\n            };\r\n        }\r\n        case ADD_POST_FAILURE: {\r\n            return {\r\n                ...state,\r\n                isAddingPost: false,\r\n                addPostError: action.error,\r\n            };\r\n        }\r\n        // 게시글에 댓글 남겼을 때\r\n        case ADD_COMMENT_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isAddingComment: true,\r\n                addCommentErrorReason: \"\",\r\n                commentAdded: false,\r\n            };\r\n        }\r\n        case ADD_COMMENT_SUCCESS: {\r\n            // 댓글을 추가할 게시글을 찾아야함\r\n            const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\r\n            const post = state.mainPosts[postIndex]; // 불변성 확보\r\n            const Comments = [...post.Comments, action.data.comment]; // 댓글 넣음\r\n            const mainPosts = [...state.mainPosts]; // mainPosts 불변성 확보\r\n            mainPosts[postIndex] = { ...post, Comments };\r\n            return {\r\n                ...state,\r\n                commentAdded: true,\r\n                mainPosts: [dummyPost, ...mainPosts],\r\n            };\r\n        }\r\n        case ADD_COMMENT_FAILURE: {\r\n            return {\r\n                ...state,\r\n                addCommentErrorReason: action.error,\r\n            };\r\n        }\r\n        // 게시글에 댓글 불러옴\r\n        case LOAD_COMMENT_REQUEST: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case LOAD_COMMENT_SUCCESS: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case LOAD_COMMENT_FAILURE: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        // 리트윗\r\n        case RETWEET_REQUEST: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case RETWEET_SUCCESS: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case RETWEET_FAILURE: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        // 포스트 제거\r\n        case REMOVE_POST_REQUEST: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case REMOVE_POST_SUCCESS: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case REMOVE_POST_FAILURE: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        default: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}