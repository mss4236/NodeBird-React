{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nvar _initialState;\n\n// post reducer ((((((((((( store은 정확하게는 state, action, reducer가 합쳐진 것 )))))))))))\n// store\nexport var initialState = (_initialState = {\n  imagePaths: [],\n  // 미리보기 이미지 경로들\n  mainPosts: [{\n    User: {\n      id: 1,\n      nickname: \"pkm\"\n    },\n    content: \"까불지마\",\n    img: \"\"\n  }]\n}, _defineProperty(_initialState, \"imagePaths\", []), _defineProperty(_initialState, \"addPostError\", false), _defineProperty(_initialState, \"isAddingPost\", false), _initialState); // 액션 이름 (비동기 처리를 해야하는 경우 REQUEST, SUCCESS, FAILURE 3가지로 나눴음)\n// 메인포스트 로딩하는 액션\n\nexport var LOAD_MAIN_POSTS_REQUEST = \"LOAD_MAIN_POSTS_REQUEST\";\nexport var LOAD_MAIN_POSTS_SUCCESS = \"LOAD_MAIN_POSTS_SUCCESS\";\nexport var LOAD_MAIN_POSTS_FAILURE = \"LOAD_MAIN_POSTS_FAILURE\"; // 해시태그로 검색했을 때 그 결과를 로딩하는 액션\n\nexport var LOAD_HASHTAG_POSTS_REQUEST = \"LOAD_HASHTAG_POSTS_REQUEST\";\nexport var LOAD_HASHTAG_POSTS_SUCCESS = \"LOAD_HASHTAG_POSTS_SUCCESS\";\nexport var LOAD_HASHTAG_POSTS_FAILURE = \"LOAD_HASHTAG_POSTS_FAILURE\"; // 이미지 업로드하는 액션\n\nexport var UPLOAD_IMGES_REQUEST = \"UPLOAD_IMGES_REQUEST\";\nexport var UPLOAD_IMGES_SUCCESS = \"UPLOAD_IMGES_SUCCESS\";\nexport var UPLOAD_IMGES_FAILURE = \"UPLOAD_IMGES_FAILURE\"; // 이미지 업로드한거 취소하는 액션\n\nexport var REMOVE_IMAGE = \"REMOVE_IMAGE\"; // 포스트에 좋아요 눌렀을때 액션\n\nexport var LIKE_POST_REQUEST = \"LIKE_POST_REQUEST\";\nexport var LIKE_POST_SUCCESS = \"LIKE_POST_SUCCESS\";\nexport var LIKE_POST_FAILURE = \"LIKE_POST_FAILURE\"; // 좋아요 취소했을때 액션\n\nexport var UNLIKE_POST_REQUEST = \"UNLIKE_POST_REQUEST\";\nexport var UNLIKE_POST_SUCCESS = \"UNLIKE_POST_SUCCESS\";\nexport var UNLIKE_POST_FAILURE = \"UNLIKE_POST_FAILURE\"; // 포스트 추가하는 액션\n\nexport var ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport var ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport var ADD_POST_FAILURE = \"ADD_POST_FAILURE\"; // 게시글에 댓글 남겼을때\n\nexport var ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport var ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport var ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\"; // 게시글에 댓글 불러오는거\n\nexport var LOAD_COMMENT_REQUEST = \"LOAD_COMMENT_REQUEST\";\nexport var LOAD_COMMENT_SUCCESS = \"LOAD_COMMENT_SUCCESS\";\nexport var LOAD_COMMENT_FAILURE = \"LOAD_COMMENT_FAILURE\"; // 리트윗하는 액션\n\nexport var RETWEET_REQUEST = \"RETWEET_REQUEST\";\nexport var RETWEET_SUCCESS = \"RETWEET_SUCCESS\";\nexport var RETWEET_FAILURE = \"RETWEET_FAILURE\"; // 포스트 제거하는 액션\n\nexport var REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport var REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport var REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\"; // 포스트 수정하는 액션 !!!!!!!!!!!!!!!!!!!!! 내가 직접 해볼 것 !!!!!!!!!!!!!!!!!!!!!!!\n// 실제 액션\n\nvar addPost = {\n  type: ADD_POST_REQUEST\n}; // const addDummy = {\n//   type: ADD_DUMMY,\n//   data: {\n//     content: \"Hello\",\n//     UserId: 1,\n//     User: {\n//       nickname: \"PKM\",\n//     },\n//   },\n// };\n// reducer\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    // 메인포스트 불러오는거\n    case LOAD_MAIN_POSTS_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_MAIN_POSTS_SUCCESS:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_MAIN_POSTS_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n    // 해시태그로 검색했을 때\n\n    case LOAD_HASHTAG_POSTS_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_HASHTAG_POSTS_SUCCESS:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_HASHTAG_POSTS_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n    // 이미지 업로드\n\n    case UPLOAD_IMGES_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case UPLOAD_IMGES_SUCCESS:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case UPLOAD_IMGES_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n    // 이미지 업로드 취소\n\n    case REMOVE_IMAGE:\n      {\n        return _objectSpread({}, state);\n      }\n    // 포스트에 좋아요\n\n    case LIKE_POST_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LIKE_POST_SUCCESS:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LIKE_POST_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n    // 포스트에 좋아요 취소\n\n    case UNLIKE_POST_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case UNLIKE_POST_SUCCESS:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case UNLIKE_POST_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n    // 포스트 추가\n\n    case ADD_POST_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: true,\n          addPostError: \"\"\n        });\n      }\n\n    case ADD_POST_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          mainPosts: [action.data].concat(_toConsumableArray(state.mainPosts))\n        });\n      }\n\n    case ADD_POST_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          addPostError: action.error\n        });\n      }\n    // 게시글에 댓글 남겼을 때\n\n    case ADD_COMMENT_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case ADD_COMMENT_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n    // 게시글에 댓글 불러옴\n\n    case LOAD_COMMENT_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_COMMENT_SUCCESS:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_COMMENT_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n    // 리트윗\n\n    case RETWEET_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case RETWEET_SUCCESS:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case RETWEET_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n    // 포스트 제거\n\n    case REMOVE_POST_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case REMOVE_POST_SUCCESS:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case REMOVE_POST_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/mss42/Desktop/SNS React/front/reducers/post.js"],"names":["initialState","imagePaths","mainPosts","User","id","nickname","content","img","LOAD_MAIN_POSTS_REQUEST","LOAD_MAIN_POSTS_SUCCESS","LOAD_MAIN_POSTS_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","UPLOAD_IMGES_REQUEST","UPLOAD_IMGES_SUCCESS","UPLOAD_IMGES_FAILURE","REMOVE_IMAGE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","LOAD_COMMENT_REQUEST","LOAD_COMMENT_SUCCESS","LOAD_COMMENT_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","addPost","type","reducer","state","action","isAddingPost","addPostError","data","error"],"mappings":"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","sourcesContent":["// post reducer ((((((((((( store은 정확하게는 state, action, reducer가 합쳐진 것 )))))))))))\r\n\r\n// store\r\nexport const initialState = {\r\n  imagePaths: [], // 미리보기 이미지 경로들\r\n  mainPosts: [\r\n    {\r\n      User: {\r\n        id: 1,\r\n        nickname: \"pkm\",\r\n      },\r\n      content: \"까불지마\",\r\n      img: \"\",\r\n    },\r\n  ], // 화면에 보일 포스트들\r\n  imagePaths: [], // 미리보기 이미지 경로\r\n  addPostError: false, // 포스트 업로드 실패 사유\r\n  isAddingPost: false, // 포스트 업로드 중\r\n};\r\n\r\n// 액션 이름 (비동기 처리를 해야하는 경우 REQUEST, SUCCESS, FAILURE 3가지로 나눴음)\r\n// 메인포스트 로딩하는 액션\r\nexport const LOAD_MAIN_POSTS_REQUEST = \"LOAD_MAIN_POSTS_REQUEST\";\r\nexport const LOAD_MAIN_POSTS_SUCCESS = \"LOAD_MAIN_POSTS_SUCCESS\";\r\nexport const LOAD_MAIN_POSTS_FAILURE = \"LOAD_MAIN_POSTS_FAILURE\";\r\n\r\n// 해시태그로 검색했을 때 그 결과를 로딩하는 액션\r\nexport const LOAD_HASHTAG_POSTS_REQUEST = \"LOAD_HASHTAG_POSTS_REQUEST\";\r\nexport const LOAD_HASHTAG_POSTS_SUCCESS = \"LOAD_HASHTAG_POSTS_SUCCESS\";\r\nexport const LOAD_HASHTAG_POSTS_FAILURE = \"LOAD_HASHTAG_POSTS_FAILURE\";\r\n\r\n// 이미지 업로드하는 액션\r\nexport const UPLOAD_IMGES_REQUEST = \"UPLOAD_IMGES_REQUEST\";\r\nexport const UPLOAD_IMGES_SUCCESS = \"UPLOAD_IMGES_SUCCESS\";\r\nexport const UPLOAD_IMGES_FAILURE = \"UPLOAD_IMGES_FAILURE\";\r\n\r\n// 이미지 업로드한거 취소하는 액션\r\nexport const REMOVE_IMAGE = \"REMOVE_IMAGE\";\r\n\r\n// 포스트에 좋아요 눌렀을때 액션\r\nexport const LIKE_POST_REQUEST = \"LIKE_POST_REQUEST\";\r\nexport const LIKE_POST_SUCCESS = \"LIKE_POST_SUCCESS\";\r\nexport const LIKE_POST_FAILURE = \"LIKE_POST_FAILURE\";\r\n\r\n// 좋아요 취소했을때 액션\r\nexport const UNLIKE_POST_REQUEST = \"UNLIKE_POST_REQUEST\";\r\nexport const UNLIKE_POST_SUCCESS = \"UNLIKE_POST_SUCCESS\";\r\nexport const UNLIKE_POST_FAILURE = \"UNLIKE_POST_FAILURE\";\r\n\r\n// 포스트 추가하는 액션\r\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\r\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\r\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\r\n\r\n// 게시글에 댓글 남겼을때\r\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\r\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\r\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\r\n\r\n// 게시글에 댓글 불러오는거\r\nexport const LOAD_COMMENT_REQUEST = \"LOAD_COMMENT_REQUEST\";\r\nexport const LOAD_COMMENT_SUCCESS = \"LOAD_COMMENT_SUCCESS\";\r\nexport const LOAD_COMMENT_FAILURE = \"LOAD_COMMENT_FAILURE\";\r\n\r\n// 리트윗하는 액션\r\nexport const RETWEET_REQUEST = \"RETWEET_REQUEST\";\r\nexport const RETWEET_SUCCESS = \"RETWEET_SUCCESS\";\r\nexport const RETWEET_FAILURE = \"RETWEET_FAILURE\";\r\n\r\n// 포스트 제거하는 액션\r\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\r\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\r\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\r\n\r\n// 포스트 수정하는 액션 !!!!!!!!!!!!!!!!!!!!! 내가 직접 해볼 것 !!!!!!!!!!!!!!!!!!!!!!!\r\n\r\n// 실제 액션\r\nconst addPost = {\r\n  type: ADD_POST_REQUEST,\r\n};\r\n// const addDummy = {\r\n//   type: ADD_DUMMY,\r\n//   data: {\r\n//     content: \"Hello\",\r\n//     UserId: 1,\r\n//     User: {\r\n//       nickname: \"PKM\",\r\n//     },\r\n//   },\r\n// };\r\n\r\n// reducer\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    // 메인포스트 불러오는거\r\n    case LOAD_MAIN_POSTS_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case LOAD_MAIN_POSTS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case LOAD_MAIN_POSTS_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    // 해시태그로 검색했을 때\r\n    case LOAD_HASHTAG_POSTS_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case LOAD_HASHTAG_POSTS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case LOAD_HASHTAG_POSTS_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    // 이미지 업로드\r\n    case UPLOAD_IMGES_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case UPLOAD_IMGES_SUCCESS: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case UPLOAD_IMGES_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    // 이미지 업로드 취소\r\n    case REMOVE_IMAGE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    // 포스트에 좋아요\r\n    case LIKE_POST_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case LIKE_POST_SUCCESS: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case LIKE_POST_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    // 포스트에 좋아요 취소\r\n    case UNLIKE_POST_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case UNLIKE_POST_SUCCESS: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case UNLIKE_POST_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    // 포스트 추가\r\n    case ADD_POST_REQUEST: {\r\n      return {\r\n        ...state,\r\n        isAddingPost: true,\r\n        addPostError: \"\",\r\n      };\r\n    }\r\n    case ADD_POST_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isAddingPost: false,\r\n        mainPosts: [action.data, ...state.mainPosts],\r\n      };\r\n    }\r\n    case ADD_POST_FAILURE: {\r\n      return {\r\n        ...state,\r\n        isAddingPost: false,\r\n        addPostError: action.error,\r\n      };\r\n    }\r\n    // 게시글에 댓글 남겼을 때\r\n    case ADD_COMMENT_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case ADD_COMMENT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case ADD_COMMENT_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    // 게시글에 댓글 불러옴\r\n    case LOAD_COMMENT_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case LOAD_COMMENT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case LOAD_COMMENT_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    // 리트윗\r\n    case RETWEET_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case RETWEET_SUCCESS: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case RETWEET_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    // 포스트 제거\r\n    case REMOVE_POST_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case REMOVE_POST_SUCCESS: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case REMOVE_POST_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    default: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}