{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\mss42\\\\Desktop\\\\SNS React\\\\front\\\\components\\\\PostCard.js\";\n\nimport React from \"react\";\nimport { Card, Icon, Avatar, Button } from \"antd\";\nimport { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useCallback } from \"react\";\n\nvar PostCard = function PostCard(_ref) {\n  var post = _ref.post;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      commentFormOpened = _useState2[0],\n      setcommentFormOpened = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      commentText = _useState4[0],\n      setcommentText = _useState4[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var dispatch = useDispatch(); // 댓글 아이콘 누르면 펼쳐지고 닫히고\n\n  var onToggleComment = useCallback(function () {\n    setcommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(Card, {\n    key: +post.createdAt,\n    cover: post.img && /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"example\",\n      src: post.img,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 32\n      }\n    }),\n    actions: [/*#__PURE__*/React.createElement(Icon, {\n      type: \"retweet\",\n      key: \"retweet\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Icon, {\n      type: \"heart\",\n      key: \"heart\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 67\n      }\n    }), /*#__PURE__*/React.createElement(Icon, {\n      type: \"message\",\n      key: \"message\",\n      onClick: onToggleComment,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 107\n      }\n    }), /*#__PURE__*/React.createElement(Icon, {\n      type: \"ellipsis\",\n      key: \"ellipsis\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 177\n      }\n    })],\n    extra: /*#__PURE__*/React.createElement(Button, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 20\n      }\n    }, \"\\uD314\\uB85C\\uC6B0\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Meta, {\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 32\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: post.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default PostCard;","map":{"version":3,"sources":["C:/Users/mss42/Desktop/SNS React/front/components/PostCard.js"],"names":["React","Card","Icon","Avatar","Button","useState","useSelector","useDispatch","useCallback","PostCard","post","commentFormOpened","setcommentFormOpened","commentText","setcommentText","state","user","me","dispatch","onToggleComment","prev","createdAt","img","User","nickname","content"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,EAA6BC,MAA7B,QAA2C,MAA3C;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,OAA5B;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,kBACuBL,QAAQ,CAAC,KAAD,CAD/B;AAAA;AAAA,MACpBM,iBADoB;AAAA,MACDC,oBADC;;AAAA,mBAEWP,QAAQ,CAAC,EAAD,CAFnB;AAAA;AAAA,MAEpBQ,WAFoB;AAAA,MAEPC,cAFO;;AAAA,qBAGZR,WAAW,CAAC,UAACS,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAHC;AAAA,MAGnBC,EAHmB,gBAGnBA,EAHmB;;AAI3B,MAAMC,QAAQ,GAAGX,WAAW,EAA5B,CAJ2B,CAM3B;;AACA,MAAMY,eAAe,GAAGX,WAAW,CAAC,YAAM;AACtCI,IAAAA,oBAAoB,CAAC,UAACQ,IAAD;AAAA,aAAU,CAACA,IAAX;AAAA,KAAD,CAApB;AACH,GAFkC,EAEhC,EAFgC,CAAnC;AAIA,sBACI,oBAAC,IAAD;AACI,IAAA,GAAG,EAAE,CAACV,IAAI,CAACW,SADf;AAEI,IAAA,KAAK,EAAEX,IAAI,CAACY,GAAL,iBAAY;AAAK,MAAA,GAAG,EAAC,SAAT;AAAmB,MAAA,GAAG,EAAEZ,IAAI,CAACY,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFvB;AAGI,IAAA,OAAO,EAAE,cAAC,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,SAAX;AAAqB,MAAA,GAAG,EAAC,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAD,eAA6C,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,OAAX;AAAmB,MAAA,GAAG,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA7C,eAAqF,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,SAAX;AAAqB,MAAA,GAAG,EAAC,SAAzB;AAAmC,MAAA,OAAO,EAAEH,eAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArF,eAA2J,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,UAAX;AAAsB,MAAA,GAAG,EAAC,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA3J,CAHb;AAII,IAAA,KAAK,eAAE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,MAAM,eAAE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAST,IAAI,CAACa,IAAL,CAAUC,QAAV,CAAmB,CAAnB,CAAT,CAAnB;AAA6D,IAAA,KAAK,EAAEd,IAAI,CAACa,IAAL,CAAUC,QAA9E;AAAwF,IAAA,WAAW,EAAEd,IAAI,CAACe,OAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ;AAUH,CArBD;;AAuBA,eAAehB,QAAf","sourcesContent":["import React from \"react\";\r\nimport { Card, Icon, Avatar, Button } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useCallback } from \"react\";\r\n\r\nconst PostCard = ({ post }) => {\r\n    const [commentFormOpened, setcommentFormOpened] = useState(false);\r\n    const [commentText, setcommentText] = useState(\"\");\r\n    const { me } = useSelector((state) => state.user);\r\n    const dispatch = useDispatch();\r\n\r\n    // 댓글 아이콘 누르면 펼쳐지고 닫히고\r\n    const onToggleComment = useCallback(() => {\r\n        setcommentFormOpened((prev) => !prev);\r\n    }, []);\r\n\r\n    return (\r\n        <Card\r\n            key={+post.createdAt}\r\n            cover={post.img && <img alt=\"example\" src={post.img} />}\r\n            actions={[<Icon type=\"retweet\" key=\"retweet\"></Icon>, <Icon type=\"heart\" key=\"heart\"></Icon>, <Icon type=\"message\" key=\"message\" onClick={onToggleComment}></Icon>, <Icon type=\"ellipsis\" key=\"ellipsis\"></Icon>]}\r\n            extra={<Button>팔로우</Button>}\r\n        >\r\n            <Card.Meta avatar={<Avatar>{post.User.nickname[0]}</Avatar>} title={post.User.nickname} description={post.content} />\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default PostCard;\r\n"]},"metadata":{},"sourceType":"module"}